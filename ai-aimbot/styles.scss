@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

body {
  height: 200vh;
  background: radial-gradient(ellipse at bottom, #202326 0%, #090a0f 100%);
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
  width: 100%;
  background-color: #0b0c0e;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 0;
}

%container {
  position: absolute;
  height: 100vh;
  width: 100%;
}

.snow-container {
  @extend %container;
  top: 0;
  left: 0;
  z-index: 2;
  overflow: visible; // Change to visible
  mask-image: linear-gradient(to bottom, 
              rgba(0,0,0,1) 0%,
              rgba(0,0,0,1) 80%,
              rgba(0,0,0,0) 100%);
  -webkit-mask-image: linear-gradient(to bottom, 
              rgba(0,0,0,1) 0%,
              rgba(0,0,0,1) 80%,
              rgba(0,0,0,0) 100%);
}

.what-is-section-container {
  @extend %container;
  top: 75%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 3;
}

.snow {
  $total: 200;
  position: absolute;
  width: 15px;
  height: 15px;
  background: rgb(200, 0, 0);
  filter: drop-shadow(0 0 0.75rem crimson);
  border-radius: 50%;
  z-index: 1;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }
      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}

%divider {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: white;
  bottom: -10px;
}

%undetext {
  content: '';
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  width: 100%;
  bottom: -20px;
}

.title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 5rem;
  font-family: 'Dongle', sans-serif;
  filter: drop-shadow(0 0 0.75rem crimson);
  background: linear-gradient(90deg, rgba(250, 156, 41, 1), rgba(209, 21, 81, 1));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  z-index: 3;
}

.what-is-wrapper {
  position: absolute;
  @extend %container;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 3;
  transform: translateX(-50%);
  width: max(891px); //891px;
  text-align: left;
}

.what-is-title {
  @extend .title;
  left: 50%;
  transform: translate(-50%, -50%);
  top: 10%;
  width: 100%;
  position: absolute;
  filter: drop-shadow(0 0 0.75rem blue);
  background: linear-gradient(90deg, rgba(113, 55, 247, 1), rgba(114, 239, 254, 1));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-family: "Roboto", sans-serif;
  font-size: 3rem;

    &::after {
    @extend %divider;
  }
}

$base-undertext: (
  color: white,
  font-family: "Roboto", sans-serif
  font-size: 1rem,
  line-height: 1.5,
  position: absolute,
  text-align: left,
  width: 100%
);

@mixin height-based-margin($min-height, $max-height, $margin-top) {
  @media (min-height: #{$min-height}px) and (max-height: #{$max-height}px) {
    .what-is-undertext {
      @each $property, $value in $base-undertext {
        #{$property}: $value;
      }
      margin-top: #{$margin-top}px;
    }
  }
}

$height-ranges: (
  (650, 799, 170),
  (800, 899, 180),
  (900, 999, 190),
  (1000, 1099, 200),
  (1100, 1199, 210),
  (1200, 1299, 220),
  (1300, 1399, 230),
  (1400, 1499, 240),
  (1500, 1599, 250),
  (1600, 1699, 260),
  (1700, 1799, 270),
  (1800, 1899, 280),
  (1900, 1999, 290),
  (2000, 2099, 300),
  (2100, 2199, 310),
  (2200, 2299, 320),
  (2300, 2399, 330),
  (2400, 2499, 340)
);

@each $range in $height-ranges {
  @include height-based-margin(nth($range, 1), nth($range, 2), nth($range, 3));
}


